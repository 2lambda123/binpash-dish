syntax = "proto3";

option go_package = "runtime/pipe/proto";

service Discovery {
    rpc PutAddr(PutAddrMsg) returns (Status) {}
    rpc GetAddr(AddrReq) returns(GetAddrReply) {}
    rpc RemoveAddr(AddrReq) returns (Status) {}
    rpc readStream(AddrReq) returns (stream Data) {}
    rpc writeStream(stream Data) returns (Status) {}
    rpc PutAddrOptimized(PutAddrMsg) returns (Status) {}
    rpc GetAddrOptimized(AddrReq) returns(GetAddrReply) {}
    rpc FindPersistedOptimized(FPMessage) returns(FPMessageReply) {}
    rpc RemovePersistedOptimized(RPMessage) returns(Status) {}
}

message PutAddrMsg {
    string Id = 1;
    string Addr = 2;
}

message AddrReq {
    string Id = 1;
}

message GetAddrReply {
    bool Success = 1;
    string Addr = 2;
}

message Status {
    bool Success = 1;
}

message Data {
    bytes buffer = 1;
    string Id = 2; // only sent with first message
}

message FPMessage {
    repeated string uuids = 1;
    string addr = 2;
}

message FPMessageReply {
    repeated int32 indexes = 1;
}

message RPMessage {
    repeated string uuids = 1;
}
